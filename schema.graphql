schema {
  query: Query
  mutation: Mutation
}

interface ICommon {
  id: ID!
  entityType: EntityType!
  created: AWSDateTime!
  modified: AWSDateTime
  discontinued: Boolean!
}

interface ICreatable {
  creator: ID!
}

enum EntityType {
  USER
  ALARM
}

type User implements ICommon {
  id: ID!
  entityType: EntityType!
  created: AWSDateTime!
  modified: AWSDateTime
  discontinued: Boolean!
  email: AWSEmail!
  name: String!
  alarms: Int!
}

type AlarmRingTime {
  hour: Int!
  minute: Int!
}

type AlarmSnoozeSettings {
  duration: Int!
  interval: Int!
}

type Alarm implements ICommon & ICreatable {
  id: ID!
  entityType: EntityType!
  created: AWSDateTime!
  modified: AWSDateTime,
  discontinued: Boolean!
  creator: ID!
  name: String
  enabled: Boolean,
  days: [Int!],
  time: AlarmRingTime!,
  snooze: AlarmSnoozeSettings!,
  onceOff: Boolean
}

input UpdateUserInput {
  email: AWSEmail
  name: String
}

# BEGIN: "Alarm Inputs":

input AlarmRingTimeInput {
  hour: Int!
  minute: Int!
}

input AlarmSnoozeSettingsInput {
  duration: Int!
  interval: Int!
}

input UpsertAlarmInput {
  id: ID
  name: String
  enabled: Boolean
  days: [Int!]
  time: AlarmRingTimeInput!
  snooze: AlarmSnoozeSettingsInput!
  onceOff: Boolean
}

# END: "Alarm Inputs"

type Query {

  getProfile: User @aws_cognito_user_pools 
  getAlarm(id: ID!): Alarm @aws_cognito_user_pools

}

type Mutation {
  updateUser(input:UpdateUserInput): User @aws_cognito_user_pools
  deleteUser: Boolean @aws_cognito_user_pools
  upsertAlarm(input:UpsertAlarmInput!): Alarm @aws_cognito_user_pools
}